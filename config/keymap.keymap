#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

/ {
    macros {
        screen_cut: screen_cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LWIN)) &kp PAGE_DOWN>;
            label = "SCREEN_CUT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC         &kp F1  &kp F2  &kp F3            &kp F4              &kp F5       &kp F6            &kp F7           &kp F8       &kp F9  &kp F10  &kp F11  &kp F12  &kp HOME
&kp TAB         &kp Q   &kp L   &kp U             &kp COMMA           &kp PERIOD   &kp LALT          &to 4            &kp F        &kp W   &kp R    &kp Y    &kp P    &kp END
&kp LEFT_SHIFT  &kp E   &kp I   &mt LEFT_ALT A    &kp O               &kp MINUS    &kp INT_MUHENKAN  &kp INT_HENKAN   &kp K        &kp T   &kp N    &kp S    &kp H    &kp P
&kp LCTRL       &kp Z   &kp X   &kp C             &kp V               &kp TAB      &kp LEFT_WIN      &kp DELETE       &kp G        &kp D   &kp M    &kp J    &kp B    &kp QUESTION
                                &lt 3 INT_HENKAN  &lt 1 INT_MUHENKAN  &lt 4 SPACE  &kp DELETE        &lt 4 BACKSPACE  &lt 2 ENTER
            >;
        };

        kigou {
            bindings = <
&kp ESC    &kp N1           &kp N2             &kp N3           &kp N4                &kp N5       &none  &none  &kp N6            &kp N7             &kp N8           &kp N9         &kp N0            &none
&kp TAB    &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp POUND        &kp DOLLAR            &kp PERCENT  &none  &none  &kp JP_DQUOTE     &kp JP_QUOTE       &kp JP_LPAREN    &kp JP_RPAREN  &kp MINUS         &kp JP_YEN
&kp LSHFT  &kp JP_PIPE      &kp JP_PLUS        &kp JP_ASTERISK  &kp JP_COLON          &kp SEMI     &none  &none  &kp JP_AT         &kp JP_UNDERSCORE  &kp JP_LBRACKET  &kp JP_LBRACE  &kp JP_TILDE      &kp LS(RBRC)
&kp LCTRL  &none            &kp JP_AMPERSAND   &kp LS(LT)       &kp LS(GREATER_THAN)  &none        &none  &none  &kp JP_YEN        &kp JP_EQUAL       &kp JP_RBRACKET  &kp JP_RBRACE  &kp JP_BACKQUOTE  &none
                                               &none            &none                 &none        &none  &none  &kp LSHFT
            >;
        };

        arrow {
            bindings = <
&kp ESC    &none        &none      &none          &none     &none  &none  &none    &none             &kp K_MUTE       &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none        &to 7
&kp TAB    &kp LA(TAB)  &none      &kp LGUI       &kp BSPC  &none  &none  &none    &none             &kp DEL          &kp UP_ARROW       &kp BSPC         &none        &none
&kp LSHFT  &none        &kp LCTRL  &kp LSHFT      &kp BSPC  &none  &none  &none    &kp INT_HENKAN    &kp LEFT         &kp DOWN           &kp RIGHT        &none        &none
&kp LCTRL  &kp LALT     &kp LGUI   &kp PAGE_DOWN  &none     &none  &none  &none    &kp INT_MUHENKAN  &kp LC(LS(TAB))  &kp LC(GRAVE)      &kp LC(TAB)      &kp LA(TAB)  &none
                                   &none          &none     &none  &none  &kp DEL  &kp BSPC
            >;
        };

        layer_3 {
            bindings = <
&none  &none     &none         &none      &none     &none  &none  &none  &none  &none  &none  &none  &none  &bt BT_SEL 3
&none  &none     &kp UP_ARROW  &none      &none     &none  &none  &none  &none  &none  &none  &none  &none  &bt BT_SEL 2
&none  &kp LEFT  &kp DOWN      &kp RIGHT  &mkp MB1  &none  &none  &none  &none  &none  &none  &none  &none  &bt BT_SEL 1
&none  &none     &none         &none      &none     &none  &none  &none  &none  &none  &none  &none  &none  &bt BT_SEL 0
                               &none      &none     &none  &none  &none  &none
            >;
        };

        tenkey {
            bindings = <
&trans       &kp F1     &kp F2     &kp F3     &kp F4     &kp F5   &trans   &trans     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_N9        &kp KP_SLASH     &kp KP_PLUS   &to 0
&kp F6       &kp F7     &kp F8     &kp F9     &kp F10    &kp F11  &kp F12  &kp DEL    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK  &kp KP_MINUS  &trans
&trans       &kp LC(A)  &trans     &trans     &trans     &trans   &trans   &kp BSPC   &kp KP_N1        &kp KP_N2        &kp KP_NUMBER_3  &kp KP_PLUS      &kp UP_ARROW  &trans
&kp LA(TAB)  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans   &trans   &trans     &kp KP_N0        &kp DOT          &kp RET          &kp LEFT_ARROW   &kp DOWN      &kp RIGHT
                                   &trans     &kp LGUI   &trans   &trans   &kp ENTER  &trans
            >;
        };

        mouse {
            bindings = <
&kp LSHFT  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans    &trans              &trans  &trans
&kp LCTRL  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F5       &mkp MB3  &mkp MB5            &trans  &trans
&kp LSHFT  &kp A   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB1     &mkp MB2  &lt 6 INT_MUHENKAN  &trans  &trans
&kp LCTRL  &kp Z   &kp X   &kp C   &kp V   &trans  &trans  &trans  &trans  &screen_cut  &trans    &mkp MB4            &trans  &trans
                           &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        scroll {
            bindings = <
&kp ESC    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        qwerty {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3              &kp N4    &kp N5     &kp N6     &trans  &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &to 0
&kp TAB    &kp Q   &kp W   &kp E               &kp R     &kp T      &kp Y      &trans  &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&kp LSHFT  &kp A   &kp S   &kp D               &kp F     &kp G      &kp H      &trans  &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&kp LCTRL  &kp Z   &kp X   &kp C               &kp V     &kp B      &kp N      &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                           &lt 8 INT_MUHENKAN  &kp LALT  &kp SPACE  &kp ENTER  &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                          &trans   &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
